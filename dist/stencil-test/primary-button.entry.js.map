{"file":"primary-button.entry.esm.js","mappings":";;;AAAA,MAAM,gBAAgB,GAAG,okBAAokB;;MCQhlB,aAAa;;;;;;0BAIO,KAAK;;IAEpC,WAAW;QACT,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,UAAU,CAAC;gBACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB,EAAE,IAAI,CAAC,CAAC;SACV;KACF;IAEO,QAAQ;QACd,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;IACO,QAAQ;QACd,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;KAChD;IAED,MAAM;QACJ,QACE,+DAAQ,KAAK,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,IAC9F,IAAI,CAAC,QAAQ,EAAE,CACT,EACT;KACH;;;;;;","names":[],"sources":["src/components/primary-button/primary-button.css?tag=primary-button&encapsulation=shadow","src/components/primary-button/primary-button.tsx"],"sourcesContent":[".primary-button {\n  background-color: orange;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.primary-button:hover {\n  background-color: darkorange;\n}\n\n.primary-button:disabled,\n.primary-button[disabled] {\n  background-color: black;\n  color: white;\n  cursor: not-allowed;\n}\n.secondary-button {\n  background-color: gray;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.secondary-button:hover {\n  background-color: darkgray;\n}\n\n.secondary-button:disabled,\n.secondary-button[disabled] {\n  background-color: lightgray;\n  color: white;\n  cursor: not-allowed;\n}\n","import { Component, Prop, h, State } from '@stencil/core';\nimport { format } from '../../utils/utils';\n\n@Component({\n  tag: 'primary-button',\n  styleUrl: 'primary-button.css',\n  shadow: true,\n})\nexport class PrimaryButton {\n  @Prop() label: string;\n  @Prop() loader: boolean;\n  @Prop() btnType: string;\n  @State() isDisabled: boolean = false;\n\n  handleClick() {\n    if (this.loader) {\n      this.isDisabled = true;\n      setTimeout(() => {\n        this.isDisabled = false;\n      }, 3000);\n    }\n  }\n\n  private getLabel(): string {\n    return format(this.label);\n  }\n  private getClass(): string {\n    console.log('btnType',this.btnType);\n    return this.btnType ? this.btnType : 'primary';\n  }\n\n  render() {\n    return (\n      <button class={`${this.getClass()}`} disabled={this.isDisabled} onClick={() => this.handleClick()}>\n        {this.getLabel()}\n      </button>\n    );\n  }\n}\n"],"version":3}